# Generated by Django 3.2.5 on 2021-08-01 21:05

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OrderBillingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.BigIntegerField()),
                ('address_type', models.TextField(null=True)),
                ('city', models.TextField(null=True)),
                ('company', models.TextField(null=True)),
                ('country_id', models.CharField(max_length=255, null=True)),
                ('customer_address_id', models.BigIntegerField(null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('firstname', models.CharField(max_length=255, null=True)),
                ('lastname', models.CharField(max_length=255, null=True)),
                ('postcode', models.TextField(null=True)),
                ('region', models.TextField(null=True)),
                ('region_code', models.TextField(null=True)),
                ('region_id', models.IntegerField(null=True)),
                ('street', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(null=True), blank=True, null=True, size=255)),
                ('telephone', models.TextField(null=True)),
                ('parent_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'order_billing_addresses',
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.BigIntegerField()),
                ('base_currency_code', models.CharField(max_length=255)),
                ('base_discount_amount', models.FloatField(null=True)),
                ('base_discount_canceled', models.IntegerField(null=True)),
                ('base_shipping_canceled', models.IntegerField(null=True)),
                ('base_subtotal_canceled', models.IntegerField(null=True)),
                ('base_tax_canceled', models.IntegerField(null=True)),
                ('base_total_canceled', models.IntegerField(null=True)),
                ('discount_canceled', models.IntegerField(null=True)),
                ('shipping_canceled', models.IntegerField(null=True)),
                ('subtotal_canceled', models.IntegerField(null=True)),
                ('tax_canceled', models.IntegerField(null=True)),
                ('total_canceled', models.IntegerField(null=True)),
                ('base_grand_total', models.FloatField(null=True)),
                ('base_discount_tax_compensation_amount', models.FloatField(null=True)),
                ('base_discount_tax_compensation_invoiced', models.FloatField(null=True)),
                ('base_discount_tax_compensation_refunded', models.FloatField(null=True)),
                ('base_shipping_amount', models.FloatField(null=True)),
                ('base_shipping_discount_amount', models.FloatField(null=True)),
                ('base_shipping_discount_tax_compensation_amnt', models.FloatField(null=True)),
                ('base_shipping_incl_tax', models.FloatField(null=True)),
                ('base_shipping_invoiced', models.FloatField(null=True)),
                ('base_shipping_refunded', models.FloatField(null=True)),
                ('base_shipping_tax_amount', models.FloatField(null=True)),
                ('base_shipping_tax_refunded', models.FloatField(null=True)),
                ('base_subtotal', models.FloatField(null=True)),
                ('base_subtotal_incl_tax', models.FloatField(null=True)),
                ('base_subtotal_invoiced', models.FloatField(null=True)),
                ('base_subtotal_refunded', models.FloatField(null=True)),
                ('base_tax_amount', models.FloatField(null=True)),
                ('base_tax_invoiced', models.FloatField(null=True)),
                ('base_tax_refunded', models.FloatField(null=True)),
                ('base_total_due', models.FloatField(null=True)),
                ('base_total_invoiced', models.FloatField(null=True)),
                ('base_total_invoiced_cost', models.FloatField(null=True)),
                ('base_total_online_refunded', models.FloatField(null=True)),
                ('base_total_paid', models.FloatField(null=True)),
                ('base_total_refunded', models.FloatField(null=True)),
                ('base_to_global_rate', models.FloatField(null=True)),
                ('base_to_order_rate', models.FloatField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('customer_email', models.EmailField(max_length=254, null=True)),
                ('customer_firstname', models.CharField(max_length=255)),
                ('customer_lastname', models.CharField(max_length=255)),
                ('customer_gender', models.IntegerField(null=True)),
                ('customer_group_id', models.BigIntegerField()),
                ('customer_id', models.IntegerField(null=True)),
                ('customer_is_guest', models.IntegerField(null=True)),
                ('customer_note_notify', models.FloatField(null=True)),
                ('discount_amount', models.FloatField(null=True)),
                ('discount_description', models.TextField(null=True)),
                ('discount_invoiced', models.FloatField(null=True)),
                ('discount_refunded', models.FloatField(null=True)),
                ('email_sent', models.IntegerField(null=True)),
                ('global_currency_code', models.CharField(max_length=255)),
                ('grand_total', models.FloatField(null=True)),
                ('discount_tax_compensation_amount', models.FloatField()),
                ('discount_tax_compensation_invoiced', models.FloatField(null=True)),
                ('discount_tax_compensation_refunded', models.FloatField(null=True)),
                ('increment_id', models.CharField(max_length=255)),
                ('is_virtual', models.IntegerField(null=True)),
                ('order_currency_code', models.CharField(max_length=255)),
                ('protect_code', models.CharField(max_length=255)),
                ('quote_id', models.BigIntegerField(null=True)),
                ('remote_ip', models.CharField(max_length=255)),
                ('shipping_amount', models.FloatField(null=True)),
                ('shipping_description', models.CharField(max_length=255)),
                ('shipping_discount_amount', models.FloatField(null=True)),
                ('shipping_discount_tax_compensation_amount', models.FloatField()),
                ('shipping_incl_tax', models.FloatField(null=True)),
                ('shipping_refunded', models.FloatField(null=True)),
                ('shipping_invoiced', models.FloatField(null=True)),
                ('shipping_tax_amount', models.FloatField(null=True)),
                ('shipping_tax_refunded', models.FloatField(null=True)),
                ('state', models.CharField(max_length=255)),
                ('status', models.TextField(null=True)),
                ('store_currency_code', models.CharField(max_length=255)),
                ('store_id', models.BigIntegerField(null=True)),
                ('store_name', models.TextField(null=True)),
                ('store_to_base_rate', models.FloatField(null=True)),
                ('store_to_order_rate', models.FloatField(null=True)),
                ('subtotal', models.FloatField(null=True)),
                ('subtotal_incl_tax', models.FloatField(null=True)),
                ('subtotal_invoiced', models.FloatField(null=True)),
                ('subtotal_refunded', models.FloatField(null=True)),
                ('tax_amount', models.FloatField(null=True)),
                ('tax_invoiced', models.FloatField(null=True)),
                ('tax_refunded', models.FloatField(null=True)),
                ('total_due', models.FloatField(null=True)),
                ('total_invoiced', models.FloatField(null=True)),
                ('total_online_refunded', models.FloatField(null=True)),
                ('total_paid', models.FloatField(null=True)),
                ('total_refunded', models.FloatField(null=True)),
                ('total_item_count', models.IntegerField(null=True)),
                ('total_qty_ordered', models.IntegerField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('customer_dob', models.DateTimeField(null=True)),
                ('weight', models.FloatField(null=True)),
                ('x_forwarded_for', models.TextField(null=True)),
                ('coupon_code', models.TextField(null=True)),
                ('billing_address_id', models.IntegerField(null=True)),
                ('adjustment_negative', models.IntegerField(null=True)),
                ('adjustment_positive', models.IntegerField(null=True)),
                ('base_adjustment_negative', models.IntegerField(null=True)),
                ('base_adjustment_positive', models.IntegerField(null=True)),
                ('applied_rule_ids', models.CharField(max_length=255, null=True)),
                ('base_discount_invoiced', models.FloatField(null=True)),
                ('base_discount_refunded', models.FloatField(null=True)),
            ],
            options={
                'db_table': 'order_details',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied_rule_ids', models.CharField(max_length=255, null=True)),
                ('amount_refunded', models.FloatField(null=True)),
                ('base_amount_refunded', models.FloatField(null=True)),
                ('base_discount_amount', models.FloatField(null=True)),
                ('base_discount_invoiced', models.FloatField(null=True)),
                ('base_discount_refunded', models.FloatField(null=True)),
                ('base_discount_tax_compensation_amount', models.FloatField(null=True)),
                ('base_discount_tax_compensation_invoiced', models.IntegerField(null=True)),
                ('base_discount_tax_compensation_refunded', models.IntegerField(null=True)),
                ('base_original_price', models.FloatField(null=True)),
                ('base_price', models.FloatField(null=True)),
                ('base_price_incl_tax', models.FloatField(null=True)),
                ('base_row_invoiced', models.FloatField(null=True)),
                ('base_row_total', models.FloatField(null=True)),
                ('base_row_total_incl_tax', models.FloatField(null=True)),
                ('base_tax_amount', models.FloatField(null=True)),
                ('base_tax_invoiced', models.IntegerField(null=True)),
                ('base_tax_refunded', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('discount_amount', models.FloatField(null=True)),
                ('discount_invoiced', models.IntegerField(null=True)),
                ('discount_refunded', models.IntegerField(null=True)),
                ('discount_percent', models.FloatField(null=True)),
                ('free_shipping', models.IntegerField(null=True)),
                ('discount_tax_compensation_amount', models.FloatField(null=True)),
                ('discount_tax_compensation_invoiced', models.IntegerField(null=True)),
                ('discount_tax_compensation_refunded', models.IntegerField(null=True)),
                ('discount_tax_compensation_canceled', models.FloatField(null=True)),
                ('is_qty_decimal', models.IntegerField(null=True)),
                ('is_virtual', models.IntegerField(null=True)),
                ('item_id', models.IntegerField(null=True)),
                ('name', models.TextField(null=True)),
                ('no_discount', models.IntegerField(null=True)),
                ('order_id', models.IntegerField(null=True)),
                ('original_price', models.FloatField(null=True)),
                ('price', models.FloatField(null=True)),
                ('price_incl_tax', models.FloatField(null=True)),
                ('product_id', models.BigIntegerField(null=True)),
                ('product_type', models.TextField(null=True)),
                ('qty_canceled', models.IntegerField(null=True)),
                ('qty_invoiced', models.IntegerField(null=True)),
                ('qty_ordered', models.IntegerField(null=True)),
                ('qty_refunded', models.IntegerField(null=True)),
                ('qty_shipped', models.IntegerField(null=True)),
                ('quote_item_id', models.BigIntegerField(null=True)),
                ('row_invoiced', models.IntegerField(null=True)),
                ('row_total', models.FloatField(null=True)),
                ('row_total_incl_tax', models.IntegerField(null=True)),
                ('row_weight', models.IntegerField(null=True)),
                ('sku', models.TextField(null=True)),
                ('weee_tax_applied', models.TextField(null=True)),
                ('store_id', models.BigIntegerField(null=True)),
                ('tax_amount', models.FloatField(null=True)),
                ('tax_invoiced', models.IntegerField(null=True)),
                ('tax_percent', models.FloatField(null=True)),
                ('tax_refunded', models.FloatField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('weight', models.FloatField(null=True)),
                ('parent_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.BigIntegerField()),
                ('account_status', models.IntegerField(null=True)),
                ('additional_information', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=255)),
                ('amount_ordered', models.FloatField(null=True)),
                ('amount_authorized', models.FloatField(null=True)),
                ('amount_paid', models.FloatField(null=True)),
                ('amount_refunded', models.FloatField(null=True)),
                ('base_amount_ordered', models.FloatField(null=True)),
                ('base_amount_paid', models.FloatField(null=True)),
                ('base_amount_paid_online', models.FloatField(null=True)),
                ('base_amount_refunded', models.FloatField(null=True)),
                ('base_amount_refunded_online', models.FloatField(null=True)),
                ('base_shipping_amount', models.FloatField(null=True)),
                ('base_shipping_captured', models.FloatField(null=True)),
                ('base_shipping_refunded', models.FloatField(null=True)),
                ('cc_exp_year', models.CharField(max_length=255, null=True)),
                ('cc_last4', models.CharField(max_length=255, null=True)),
                ('last_trans_id', models.CharField(max_length=255, null=True)),
                ('cc_ss_start_month', models.CharField(max_length=255, null=True)),
                ('cc_ss_start_year', models.CharField(max_length=255, null=True)),
                ('method', models.CharField(max_length=255)),
                ('shipping_amount', models.FloatField(null=True)),
                ('shipping_captured', models.FloatField(null=True)),
                ('shipping_refunded', models.FloatField(null=True)),
                ('parent_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'order_payments',
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.BigIntegerField()),
                ('comment', models.TextField(null=True)),
                ('entity_name', models.TextField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('is_customer_notified', models.IntegerField(null=True)),
                ('is_visible_on_front', models.IntegerField(null=True)),
                ('status', models.TextField(null=True)),
                ('parent_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'order_status_histories',
            },
        ),
    ]
