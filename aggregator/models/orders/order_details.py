from django.db import models


class OrderDetail(models.Model):
    entity_id = models.BigIntegerField()
    base_currency_code = models.CharField(max_length=255)
    base_discount_amount = models.FloatField(null=True)
    base_discount_canceled = models.IntegerField(null=True)
    base_shipping_canceled = models.IntegerField(null=True)
    base_subtotal_canceled = models.IntegerField(null=True)
    base_tax_canceled = models.IntegerField(null=True)
    base_total_canceled = models.IntegerField(null=True)
    discount_canceled = models.IntegerField(null=True)
    shipping_canceled = models.IntegerField(null=True)
    subtotal_canceled = models.IntegerField(null=True)
    tax_canceled = models.IntegerField(null=True)
    total_canceled = models.IntegerField(null=True)
    base_grand_total = models.FloatField(null=True)
    base_discount_tax_compensation_amount = models.FloatField(null=True)
    base_discount_tax_compensation_invoiced = models.FloatField(null=True)
    base_discount_tax_compensation_refunded = models.FloatField(null=True)
    base_shipping_amount = models.FloatField(null=True)
    base_shipping_discount_amount = models.FloatField(null=True)
    base_shipping_discount_tax_compensation_amnt = models.FloatField(null=True)
    base_shipping_incl_tax = models.FloatField(null=True)
    base_shipping_invoiced = models.FloatField(null=True)
    base_shipping_refunded = models.FloatField(null=True)
    base_shipping_tax_amount = models.FloatField(null=True)
    base_shipping_tax_refunded = models.FloatField(null=True)
    base_subtotal = models.FloatField(null=True)
    base_subtotal_incl_tax = models.FloatField(null=True)
    base_subtotal_invoiced = models.FloatField(null=True)
    base_subtotal_refunded = models.FloatField(null=True)
    base_tax_amount = models.FloatField(null=True)
    base_tax_invoiced = models.FloatField(null=True)
    base_tax_refunded = models.FloatField(null=True)
    base_total_due = models.FloatField(null=True)
    base_total_invoiced = models.FloatField(null=True)
    base_total_invoiced_cost = models.FloatField(null=True)
    base_total_online_refunded = models.FloatField(null=True)
    base_total_paid = models.FloatField(null=True)
    base_total_refunded = models.FloatField(null=True)
    base_to_global_rate = models.FloatField(null=True)
    base_to_order_rate = models.FloatField(null=True)
    created_at = models.DateTimeField(null=True)
    customer_email = models.EmailField(null=True)
    customer_firstname = models.CharField(max_length=255)
    customer_lastname = models.CharField(max_length=255)
    customer_gender = models.IntegerField(null=True)
    customer_group_id = models.BigIntegerField()
    customer_id = models.IntegerField(null=True)
    customer_is_guest = models.IntegerField(null=True)
    customer_note_notify = models.FloatField(null=True)
    discount_amount = models.FloatField(null=True)
    discount_description = models.TextField(null=True)
    discount_invoiced = models.FloatField(null=True)
    discount_refunded = models.FloatField(null=True)
    email_sent = models.IntegerField(null=True)
    global_currency_code = models.CharField(max_length=255)
    grand_total = models.FloatField(null=True)
    discount_tax_compensation_amount = models.FloatField()
    discount_tax_compensation_invoiced = models.FloatField(null=True)
    discount_tax_compensation_refunded = models.FloatField(null=True)
    increment_id = models.CharField(max_length=255)
    is_virtual = models.IntegerField(null=True)
    order_currency_code = models.CharField(max_length=255)
    protect_code = models.CharField(max_length=255)
    quote_id = models.BigIntegerField(null=True)
    remote_ip = models.CharField(max_length=255)
    shipping_amount = models.FloatField(null=True)
    shipping_description = models.CharField(max_length=255)
    shipping_discount_amount = models.FloatField(null=True)
    shipping_discount_tax_compensation_amount = models.FloatField()
    shipping_incl_tax = models.FloatField(null=True)
    shipping_refunded = models.FloatField(null=True)
    shipping_invoiced = models.FloatField(null=True)
    shipping_tax_amount = models.FloatField(null=True)
    shipping_tax_refunded = models.FloatField(null=True)
    state = models.CharField(max_length=255)
    status = models.TextField(null=True)
    store_currency_code = models.CharField(max_length=255)
    store_id = models.BigIntegerField(null=True)
    store_name = models.TextField(null=True)
    store_to_base_rate = models.FloatField(null=True)
    store_to_order_rate = models.FloatField(null=True)
    subtotal = models.FloatField(null=True)
    subtotal_incl_tax = models.FloatField(null=True)
    subtotal_invoiced = models.FloatField(null=True)
    subtotal_refunded = models.FloatField(null=True)
    tax_amount = models.FloatField(null=True)
    tax_invoiced = models.FloatField(null=True)
    tax_refunded = models.FloatField(null=True)
    total_due = models.FloatField(null=True)
    total_invoiced = models.FloatField(null=True)
    total_online_refunded = models.FloatField(null=True)
    total_paid = models.FloatField(null=True)
    total_refunded = models.FloatField(null=True)
    total_item_count = models.IntegerField(null=True)
    total_qty_ordered = models.IntegerField(null=True)
    updated_at = models.DateTimeField(null=True)
    customer_dob = models.DateTimeField(null=True)
    weight = models.FloatField(null=True)
    x_forwarded_for = models.TextField(null=True)
    coupon_code = models.TextField(null=True)
    billing_address_id = models.IntegerField(null=True)
    adjustment_negative = models.IntegerField(null=True)
    adjustment_positive = models.IntegerField(null=True)
    base_adjustment_negative = models.IntegerField(null=True)
    base_adjustment_positive = models.IntegerField(null=True)
    applied_rule_ids = models.CharField(max_length=255, null=True)
    base_discount_invoiced = models.FloatField(null=True)
    base_discount_refunded = models.FloatField(null=True)

    class Meta:
        db_table = 'order_details'
